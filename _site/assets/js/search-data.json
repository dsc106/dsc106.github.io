{"0": {
    "doc": "Final Project",
    "title": "Final Project",
    "content": " ",
    "url": "/projects/final_project/#final-project",
    "relUrl": "/projects/final_project/#final-project"
  },"1": {
    "doc": "Final Project",
    "title": "Table of contents",
    "content": ". | Overview | Theme: Explorable Explanations | Project Milestones | Project Deliverables . | Online Visualization | Video Presentation | . | Rubric . | Initial Prototype | Demo Video | Final Deliverables | . | . ",
    "url": "/projects/final_project/#table-of-contents",
    "relUrl": "/projects/final_project/#table-of-contents"
  },"2": {
    "doc": "Final Project",
    "title": "Overview",
    "content": "The final project will provide hands-on experience designing, implementing, and deploying interactive visualizations. Your project should address a concrete visualization challenge and should propose a novel, creative solution. The final deliverable will take the form of an explorable explanation, deployed as an interactive web page. Project teams should consist of 2-3 people. In addition to your webpage, you will be responsible for presenting your final results. At the end of the quarter we will have a video showcase for you to share your work. Prior to diving in, it is helpful to gain a sense of what goes into formulating a successful visualization project and to beware of common pitfalls. We encourage you to read A Nested Model for Visualization Design and Validation by Tamara Munzner. ",
    "url": "/projects/final_project/#overview",
    "relUrl": "/projects/final_project/#overview"
  },"3": {
    "doc": "Final Project",
    "title": "Theme: Explorable Explanations",
    "content": "Your task is to create an Explorable Explanation: an interactive article that explains a complex subject to the reader. The topic could be a scientific phenomenon, a computer science algorithm, a mathematical concept, a sociological theory, or some other topic that you’re passionate about. Focus on creating one or more interactive diagrams interlinked with explanatory text or annotations. We urge you to focus on a highly visual and/or interactive experience, as opposed to expecting a viewer to read large amounts of article text. Some useful references are: . | Harry Stevens’ simulitis visualizations | Visualizations of the Boston subway system | Explorables Site | Idyll Gallery | Bret Victor | Explorable Explanations | . ",
    "url": "/projects/final_project/#theme-explorable-explanations",
    "relUrl": "/projects/final_project/#theme-explorable-explanations"
  },"4": {
    "doc": "Final Project",
    "title": "Project Milestones",
    "content": "The final project consists of the following milestones: . | Proposal (Fri 05/17, 11:59pm, Can Use Slip Days). Propose your chosen topic, dataset(s), and team members. Complete the registration form (one per team, Registration Link). We need the following information in the project proposal: . | Project Title | Dataset | Brief writeup of what you intend to do (5-10 lines). | . | Initial Prototype (Fri 05/24, 11:59pm, Can Use Slip Days). Develop an initial prototype of your project and, similar to Project 3, publish it using GitHub pages. This prototype will be used by the course staff to provide feedback on your designs. It is expected that your project will not yet be in a “complete” state; however, by this point you should have the structure of your project laid out, rough prototypes of your main visualization(s) and interactions, and at least basic descriptive text. Each team should submit the URL for their project on Gradescope. | Demo Video (Fri 05/31, 11:59pm, Can Use Slip Days). You must produce a demo video (not to exceed 2 minutes in length) that introduces and explains your project. Your video can take the form of a narrated demo of your project, and may include additional content as you see fit. We will share the videos in class on 03/14. More information about preparing the video is available in the project deliverables section. | Deliverables (Sat 06/08, 11:59pm). Publish your final project web page. You may make final touches to your page after any feedback from our video session. More information about preparing the final deliverables is available in the project deliverables section. | . Your video should be posted to YouTube, and a URL to your video must be submitted via Gradescope by Fri 03/08. The links for the complete version of your final project webpage should be submitted on Gradescope by Sat 03/16. ",
    "url": "/projects/final_project/#project-milestones",
    "relUrl": "/projects/final_project/#project-milestones"
  },"5": {
    "doc": "Final Project",
    "title": "Project Deliverables",
    "content": "To complete your final project, you must provide two primary deliverables: . | A demonstration video (&lt;= 2 minutes in length) that communicates your project goals and visualizations. YouTube URL due on Gradescope by 11:59pm, Fri 05/31. | An interactive visualization web page for your chosen topic. Code and website due on Gradescope by 11:59pm, Sat 03/16. | . Online Visualization . Your final project visualizations must be published on GitHub pages. For your visualizations you need to utilize D3.js. Keep your source code (HTML markup, visualization JavaScript code, etc.) in the top-level of your GitLab repo. When ready to publish, place all necessary files in the “docs” subfolder to publish on GitHub pages. Video Presentation . In addition to your interactive web page, each team must produce a short demonstration video (no longer than 2 minutes!) introducing your project. Your video must communicate the specific topic and goals of your project along with your visualization designs. We expect most videos will use a mixture of static slides and interactive screen capture with overlaid narration. You might consider showing your web page as published on the web. Alternatively, you might create a stripped down version that removes text in favor of spoken narration, bringing more focus and screen space to your visualizations. The initial frame of your video should include your project name and the team members’ names. Be sure that your video communicates how your visualization designs enable a better understanding of your chosen data. Do not simply enumerate the various features you implemented: focus on what viewers can learn from your visualization(s). Please carefully read the video production guide for details on how to design and record your video. Your videos should be in MPEG4 (.mp4, .m4v) format. Use appropriate compression to ensure your video file is not unnecessarily large. You will post videos online, so we encourage you to put your best face forward to the world! . Your demo video must be published on YouTube. In addition you must submit a URL linking to your video to a TA by Fri 05/31, 11:59pm. We will have a video showcase during our last lecture session on Thu 03/14. ",
    "url": "/projects/final_project/#project-deliverables",
    "relUrl": "/projects/final_project/#project-deliverables"
  },"6": {
    "doc": "Final Project",
    "title": "Rubric",
    "content": "Initial Prototype . | Webpage: 1 Point | GitHub Repo: 1 Point | Visualization: 3 Points | Writeup: 2 Points | . | Component | Complete | Incomplete | Missing | . | Webpage | The submitted URL leads to a web page. |   | The URL is missing or leads to a 404 error. | . |   | (+1 point) |   | (+0 points) | . | Github Repo | The project has a public-facing GitHub repo. |   | No GitHub repo available. | . |   | (+1 point) |   | (+0 points) | . | Visualization | The page has at least 1 visualization on the screen with at least 1 working interaction. | The page has at least one visualization, but the visualization doesn’t have an interaction. | No visualization is working on the page. | . |   | (+3 points) | (+1.5 points) | (+0 points) | . | Writeup | The web page writeup contains at least 4 sentences for each of the following questions (≥8 sentences total): 1. What have you done so far? 2. What will be the most challenging of your project to design and why? | The description answered one out of two questions, or didn’t provide at least 4 sentences for each question. | The description is missing. | . |   | (+2 points) | (+1 point) | (+0 points) | . Demo Video . The assignment is out of 15 points possible. Submissions that squarely meet the project requirements (Satisfactory column) will get 12/15 points. | Component | Excellent | Satisfactory | Not Satisfactory | . | Video URL and Length |   | The video is uploaded as a public video on YouTube, and its length is 2 minutes or less. | The submitted video URL is broken, or it goes substantially over 2 minutes. | . |   |   | (+2 point) | (+1 points) | . | Hook |   | The video opens with a hook – an interesting research question or attention-grabbing statement. | The video doesn’t open with a hook (e.g. it immediately starts describing the visualization). | . |   |   | (+2 point) | (+1 points) | . | Motivation | The video explains the motivation for your project – why do you think your visualization is better than other explanations? E.g. for algorithm explorables, what does your visualization allow that other explorables don’t? | The video explains the motivation for your project but doesn’t explain what your project does better than other explanations. | The video does not contain motivation for the project. | . |   | (+3 points) | (+2 points) | (+1 point) | . | Explanation of the visualization | The video clearly demonstrates all relevant features of the visualization, including its interactions and design choices. The video explains the most interesting features, surprising features, or most challenging features to implement. | The video clearly demonstrates all relevant features of the visualization, including its interactions and design choices, but doesn’t mention its most interesting or surprising features. | The explanation of the visualization does not sufficiently demonstrate its features. | . |   | (+3 points) | (+2 points) | (+1 point) | . | Takeaways | The video ends with an interesting takeaway and explains why your visualization demonstrates this takeaway effectively. What is the one thing that everyone should learn from your visualization? And why does your visualization succeed at explaining it? | The video ends with a takeaway message but the presentation could be improved (e.g. the takeaway isn’t surprising, or focuses too much on the implementation of the visualization). | The video does not end with a takeaway message. | . |   | (+3 points) | (+2 points) | (+1 point) | . | Viewing experience |   | The video is easy to view: all images are clearly visible and all text is legible. | The video is difficult to view (e.g. some images and text are too small to see clearly). | . |   |   | (+2 points) | (+1 points) | . | Creativity and Originality | The submission exceeds the assignment requirements, with original insights or a particularly engaging presentation. | The submission meets the assignment requirements. |   | . |   | (+1 bonus point) | (+0 points) |   | . Final Deliverables . The assignment is out of 15 points possible. Submissions that squarely meet the project requirements (Satisfactory column) will get 12/15 points. | Component | Excellent | Satisfactory | Poor | . | Web page URL, video URL, and Repo |   | The web page is publicly viewable on GitHub pages, the project video is linked (or embedded) within the web page, and the repository is publicly available. | The submitted web page URL, project video, or repository URL is broken. | . |   |   | (+1 point) | (+0 points) | . | Hook |   | The project opens with a hook – an interesting research question or attention-grabbing statement. | The project doesn’t open with a hook (e.g. it immediately shows a visualization without explanation). | . |   |   | (+1 point) | (+0 points) | . | Storytelling | The project tells a compelling story. It follows the and-but-therefore structure and also incorporates elements of surprise, personalization, or emotion. | The project tells a story – it follows the and-but-therefore structure. | The project does not tell a story (e.g. it doesn’t follow the and-but-therefore structure or something similar). | . |   | (+3 points) | (+2 points) | (+1 point) | . | Visual Encodings | The project visualizations do not violate the expressiveness criteria and the design choices (marks and encoding channels) are clear, evocative, and effective. | The project visualizations do not violate the expressiveness criteria, but another set of design choices (marks and encoding channels) could have been more effective (e.g. using the area visual channel instead of position when possible). | The project visualizations violate the expressiveness criteria (e.g. heavy overplotting, encodings that imply incorrect readings, etc.), and these violations are not addressed using the available interactions (e.g. overplotting that cannot be filtered or zoomed into). | . |   | (+3 points) | (+2 points) | (+1 point) | . | Interaction | The interactive elements of the project are polished, bug-free, and enable the reader to discover interesting patterns in the data or the concept being explored. | The interactive elements of the project are functional and enable the reader to discover interesting patterns, but a static plot (perhaps with a different encoding) could have conveyed the same information just as effectively. | The plot would have been substantially more effective as a static plot without the interaction; or, the interaction has major bugs that preclude use. | . |   | (+3 points) | (+2 points) | (+1 point) | . | Annotations |   | The visualizations contain helpful annotations (e.g. text, coloring, shading) that draw attention to interesting findings. | The visualizations contain no annotations. | . |   |   | (+1 point) | (+0 points) | . | Takeaways |   | The project ends with an interesting takeaway and explains why your visualization demonstrates this takeaway effectively. What is the one thing that everyone should learn from your project? And why does your project succeed at explaining it? | The project is missing a takeaway, or ends with a takeaway message but the presentation could be improved (e.g. the takeaway isn’t surprising, or focuses too much on the implementation of the visualization). | . |   |   | (+2 point) | (+1 point) | . | Viewing experience |   | The project is easy to view: all images are clearly visible and all text is legible on a typical laptop screen size. | The project is difficult to view (e.g. some images and text are too small to see clearly). | . |   |   | (+1 point) | (+0 points) | . | Creativity and Originality | The submission exceeds the assignment requirements, with original insights or a particularly engaging presentation. | The submission meets the assignment requirements. |   | . |   | (+1 bonus point) | (+0 points) |   | . ",
    "url": "/projects/final_project/#rubric",
    "relUrl": "/projects/final_project/#rubric"
  },"7": {
    "doc": "Final Project",
    "title": "Final Project",
    "content": " ",
    "url": "/projects/final_project/",
    "relUrl": "/projects/final_project/"
  },"8": {
    "doc": "📝 Projects",
    "title": "Projects",
    "content": " ",
    "url": "/projects/#projects",
    "relUrl": "/projects/#projects"
  },"9": {
    "doc": "📝 Projects",
    "title": "📝 Projects",
    "content": " ",
    "url": "/projects/",
    "relUrl": "/projects/"
  },"10": {
    "doc": "🏠 Home",
    "title": "Data Visualization",
    "content": "DSC 106, Spring 2024 at UC San Diego . Jared Wilber he/him . jwilber@ucsd.edu . Lecture: TuTh 6:30-7:50PM, SOLIS 104 . Week 1 . Tue Apr 2 LEC 1 The Value of Visualization . Thu Apr 4 LEC 2 Data &amp; Image Models . Fri Apr 5 LAB 1 Altair . Week 2 . Tue Apr 9 LEC 3 (In)Effective Visual Encoding . Thu Apr 11 LEC 4 Perception . Fri Apr 12 LAB 2 HTML/CSS . PROJ 1 Project 1: Expository Visualization . Week 3 . Tue Apr 16 LEC 5 Color . Thu Apr 18 LEC 6 Interaction . Fri Apr 19 LAB 3 JavaScript, SVG . Week 4 . Tue Apr 23 LEC 7 D3.js . Code . Thu Apr 25 LEC 8 Project 2 Feedback . Fri Apr 26 LAB 4 Svelte . PROJ 2 Project 2: Deceptive Visualization . Week 5 . Tue Apr 30 LEC 9 Maps . Thu May 2 LEC 10 Visualization Tools . Fri May 3 PROJ 2 Project 2 Peer Review . LAB 5 D3 . Week 6 . Tue May 7 LEC 11 Project 3 Peer Feedback . Thu May 9 LEC 12 Narrative Visualization . Fri May 10 PROJ 3 Project 3: Interactive Visualization . LAB 6 Mapbox.js . Week 7 . Tue May 14 LEC 13 JavaScript and Svelte . Code . Thu May 16 LEC 14 Animation . Code . Fri May 17 FINAL PROJ Final Project Proposal . LAB 7 Scrollytelling . Week 8 . Tue May 21 LEC 15 Uncertainty . Thu May 23 LEC 16 Evaluation &amp; Review . Fri May 24 FINAL PROJ Final Project Prototype . Week 9 . Tue May 28 LEC 17 Evaluation &amp; Review . Thu May 30 LEC 18 Final Project Feedback . Fri May 31 FINAL PROJ Final Project Demo Video . Week 10 . Tue Jun 4 LEC 19 Final Project Office Hours . Thu Jun 6 LEC 20 Final Project Showcase . Week 11 . Sat Jun 8 FINAL PROJ Final Project . ",
    "url": "/#data-visualization",
    "relUrl": "/#data-visualization"
  },"11": {
    "doc": "🏠 Home",
    "title": "🏠 Home",
    "content": " ",
    "url": "/",
    "relUrl": "/"
  },"12": {
    "doc": "Project 1: Expository Visualization",
    "title": "Project 1: Expository Visualization",
    "content": "An expository article requires the author to investigate an idea, evaluate evidence, expound on the idea, and set forth an argument concerning that idea in a clear and concise manner. In this assignment, you will design an expository visualization to clearly communicate an idea based on a small data set. In addition, you must provide a rigorous rationale for your design choices. You should in theory be ready to explain the contribution of every pixel in the display towards your expository goals. You are free to use any graphics or charting tool you please - including Altair, Plotly, Tableau, and pen and paper. ",
    "url": "/projects/project1/",
    "relUrl": "/projects/project1/"
  },"13": {
    "doc": "Project 1: Expository Visualization",
    "title": "Data: Climate in Major U.S. Cities",
    "content": "The climate of a place can have a tremendous impact on people’s lived experience, ranging from personal moods to how an entire region defines itself. Here, you will examine a set of average monthly climate measurements for six major U.S. cities, roughly covering the edges of the continental United States. The dataset can be downloaded here. The data has seven columns: . | city: The name of the city. | lon: The longitude of the city. | lat: The latitude of the city. | month: The name of a month (Jan, Feb, etc.). | monthnum: The number of a month (1, 2, etc.). | sunshine: The average hours of sunshine observed during that month. | rain: The average inches of rain observed during that month. | . The climate data were collected from https://www.usclimatedata.com/. ",
    "url": "/projects/project1/#data-climate-in-major-us-cities",
    "relUrl": "/projects/project1/#data-climate-in-major-us-cities"
  },"14": {
    "doc": "Project 1: Expository Visualization",
    "title": "Task",
    "content": "Your task is to design a single static (i.e., single image) visualization that you believe effectively communicates an idea about the data, and provide a short write-up (no more than 4 paragraphs) describing your design. Start by choosing a question you’d like your visualization to answer. Design your visualization to answer that question, and use the question as the title of your graphic. While you must use the data set given, you are free to transform the data as you see fit. Such transforms may include (but are not limited to) log transformation, computing percentages or averages, grouping elements into new categories, or removing unnecessary variables or records. You are also free to incorporate additional external data. Your chart image should be interpretable without needing to reference your write-up. Do not forget to include title, axis labels, or legends as needed! . As different visualizations can emphasize different aspects of a data set, your write-up should document what aspects of the data you are attempting to most effectively communicate. In short, what story are you trying to tell? Just as important, also note which aspects of the data might be obscured due to your visualization design. Your write-up should provide a rigorous rationale for your design decisions. Document the visual encodings you used and why they are appropriate for the data and your specific question. These decisions include the choice of visualization type, size, color, scale, and other visual elements, as well as the use of sorting or other data transformations. How do these decisions facilitate effective communication? . ",
    "url": "/projects/project1/#task",
    "relUrl": "/projects/project1/#task"
  },"15": {
    "doc": "Project 1: Expository Visualization",
    "title": "Grading",
    "content": "The assignment score is out of a maximum of 10 points. The expected median score on this assignment is an 8.5, which corresponds to an A-. We will determine scores by judging both the soundness of your design and the quality of the write-up. We will also look for consideration of audience, message, and intended task. Here are examples of aspects that may lead to point deductions: . | Use of misleading, unnecessary, or unmotivated graphic elements. | Missing chart title, axis labels, or data transformation description. | Missing or incomplete design rationale in write-up. | Ineffective encodings for your stated goal (e.g., distracting colors, improper data transformation). | . Your project will get 9/10 points if you fulfill all the requirements in the project description. You’ll get higher than 9 points if you go above and beyond the project requirements, up to 10 points. We’ll possibly give even higher than 10 points if the work is truly exceptional (e.g. could be published in a popular news article). From our perspective, the project description tells you how to get a passing grade on the project — if you followed the description and published your work as part of a portfolio, it would be considered good quality work by an outside reviewer (e.g. a professional data scientist), but probably wouldn’t be outstanding or memorable. Getting a 9/10 on the project grade reflects that. Projects that go “above and beyond” the assignment requirements to produce effective graphics may include, for example, outstanding visual design, meaningful incorporation of external data to reveal important trends, exceptional creativity, or effective annotations and other narrative devices. ",
    "url": "/projects/project1/#grading",
    "relUrl": "/projects/project1/#grading"
  },"16": {
    "doc": "Project 1: Expository Visualization",
    "title": "Submission Details",
    "content": "This is an individual assignment. You may not work in groups. Your completed assignment is due on Fri 4/12, by 11:59pm. You must submit your assignment using Gradescope. Please upload a single image file (PNG, JPG) of your visualization design using the correct file extension, such as “a1.png” for PNG image files or “a1.jpg” for JPEG image files. Please do not include your name or PID in the filename, and be sure your image is sized for a reasonable viewing experience! Viewers should not have to zoom or scroll in order to effectively view your submission. In addition, submit your write-up to Gradescope as a plain text file, named exactly as “readme.txt”, with content that follows the instructions above. Do not include your name or PID in the filename! . ",
    "url": "/projects/project1/#submission-details",
    "relUrl": "/projects/project1/#submission-details"
  },"17": {
    "doc": "Project 2: Deceptive Visualization",
    "title": "Project 2: Deceptive Visualization",
    "content": "Data visualizations are becoming a key medium for the public to understand news and information. It’s crucial to recognize how the design of a visualization can affect what people understand and remember from the data. In this task, you need to pick a dataset you find interesting and create two static visualizations using the same dataset. The first should be a truthful representation of the data. The second should be a deceptive visualization, designed to deceive the viewer. However, you should avoid clear distortions or leaving out information for this deceptive visualization. ",
    "url": "/projects/project2/",
    "relUrl": "/projects/project2/"
  },"18": {
    "doc": "Project 2: Deceptive Visualization",
    "title": "Assignment",
    "content": "Your objective is to create two static (single image) visualizations of a selected dataset. The first visualization should be designed to clearly and sincerely convey insights from the data. In contrast, the second should be crafted to intentionally mislead the viewer, causing them to make incorrect inferences. Additionally, you are required to write a brief explanation, limited to four paragraphs, outlining your design strategy for both visualizations. In this task, an earnest visualization is defined as one that: . | Is easily understandable and can be interpreted by the general public. | Uses visual encodings that are suitable and effective for the desired purpose. | Clearly and openly describes any transformations made to the data. | Transparently communicates the source of the data and any possible biases involved. | . Conversely, a deceptive visualization typically displays these characteristics: . | The graphical depiction is deliberately unsuitable or deceptive. | Headings are crafted to influence the viewer’s understanding in a biased manner. | There is intentional manipulation or selective filtering of data to deceive. | It’s not transparent about possible bias present in the data. | . For the earnest visualization, your goal is to be as clear and transparent as possible to help viewers answer your intended question. For the deceptive visualization, your goal is to trick the viewer (including the course staff!) into believing that the visualization is legitimate and earnest. It should not be immediately obvious which visualization is trying to be deceptive. Subtle ineffective choices in the design should require close and careful reading to be identified. For the deceptive visualization, misleading strategies are fine but outright lying is not. For example, sketchy, unreliable or untrustworthy input datasets are discouraged, but misleading omission, filtering, or transformation of trustworthy data records is fine. Deliberate lies in the title, axes, labels, or annotations is discouraged, but technically true/relevant but otherwise misleading text in the visualization is fine. For both visualization designs, start by choosing a question you would like to answer. Design your visualization to answer that question either correctly (for the earnest visualization) or incorrectly (for the deceptive visualization). You may choose to address a different question with each visualization. Be sure to document the question as part of the visualization design (e.g., title, subtitle, or caption) and in your assignment write-up. Your write-up should contain the following information: . | The specific question each visualization aims to answer. | A description of your design rationale and important considerations for each visualization. | . ",
    "url": "/projects/project2/#assignment",
    "relUrl": "/projects/project2/#assignment"
  },"19": {
    "doc": "Project 2: Deceptive Visualization",
    "title": "Recommended Data Sources",
    "content": "To help get you started, this assignment, we’ve provided three possible datasets for you to use, although you’re welcome to select any dataset you prefer. You must use the same dataset for both visualizations, but you may transform the data differently, use additional data variables, or choose to address a different question for each design. These datasets are intentionally chosen to cover politically charged topics for the simple reason that these are typically the types of data where deceptive visualizations may proliferate. Data on Energy by Our World in Data, 1900-2022 . Our World in Data, a non-profit that gathers and analyzes data about global issues, has published data about energy usage for countries (e.g. coal consumption, hydropower consumption, etc.) around the world since 1900. You can download the data here. Education Data . Every year, the federal government releases large amounts of data on US schools, districts, and colleges. However, this information is scattered across multiple datasets. Urban Institute’s Education Data Explorer tries to fix this issue by putting together data from various sources such as the National Center for Education Statistics’ Common Core of Data (CCD), the Civil Rights Data Collection (CRDC), the US Department of Education’s EDFacts, and IPUMS’ National Historical Geographic Information System (NHGIS) and makes it available as an API. You can download the data by making an API call using the code available on the website or alternatively clicking on the downloads button on the website. Internet Usage Data . UNdata brings international statistical databases within easy reach of users through a single-entry point. It is maintained by the Development Data Section of the Development Data and Outreach Branch within the Statistics Division of the Department of Economic and Social Affairs (UN DESA) of the UN Secretariat. You can find the internet usage data here. Feel free to take a look at some of the other datasets made available by UNdata here. This data has the following columns: . | Region/country Code: code representing the country or region. | Region or Country Name: Field containing the country name. | Year: Field containing the year at which the data was collected. | Value: Field denoting the Percentage of individuals using the internet. | Source: Field denoting the source of the data. | . Here are some other possible sources to consider. You are also free to use data from a source different from those included here. If you have any questions on whether a dataset is appropriate, please ask the course staff ASAP! . | City of San Diego open data | U.S. Government Open Datasets | U.S. Census Bureau - Census Datasets | IPUMS.org - Integrated Census &amp; Survey Data from around the World | Federal Elections Commission - Campaign Finance &amp; Expenditures | Federal Aviation Administration - FAA Data &amp; Research | NOAA Daily Weather - NOAA Daily Global Historical Climatology Network Data | yelp.com/dataset - Yelp Open Dataset | fivethirtyeight.com - Data and Code behind the Stories and Interactives | Buzzfeed News - Open-source data from BuzzFeed’s newsroom | . ",
    "url": "/projects/project2/#recommended-data-sources",
    "relUrl": "/projects/project2/#recommended-data-sources"
  },"20": {
    "doc": "Project 2: Deceptive Visualization",
    "title": "Grading",
    "content": "The assignment score is out of a maximum of 10 points. We will determine scores by judging the soundness of your visualization designs, the duplicity of your deceptive visualization, and the quality of the write-up. Here are examples of aspects that may lead to point deductions: . | Obvious identification of the earnest and deceptive visualizations. | Ineffective visual encodings for your stated goal. | Missing indication of the main analysis question. | Missing or incomplete design rationale in write-up. | . We will reward entries that go above and beyond the assignment requirements to produce effective (and deceptive) graphics. Examples may include outstanding visual design, effective annotations and other narrative devices, exceptional creativity, or deceptive designs that require the write-up in order to properly identify the misleading design components. ",
    "url": "/projects/project2/#grading",
    "relUrl": "/projects/project2/#grading"
  },"21": {
    "doc": "Project 2: Deceptive Visualization",
    "title": "Submission Details",
    "content": "This is an individual assignment. You may not work in groups. Your completed assignment is due on Fri 4/26, by 11:59 pm. You must submit your assignment using Gradescope. Please upload two image files (PNG, JPG) of your visualization design using the correct file extension, such as “a2_earnest.png” and “a2_deceptive.png” for PNG image files or “a2_earnest.jpg” or “a2_deceptive.jpg” for JPEG image files. Please do not include your name or PID in the filename, and be sure your image is sized for a reasonable viewing experience! Viewers should not have to zoom or scroll in order to effectively view your submission. In addition, submit your write-up to Gradescope as a plain text file, named exactly as “readme.txt”, with content that follows the instructions above. Do not include your name or PID in the filename! . Please use the correct file names for your submissions; typos that require manual correction by the course staff may result in point deductions. Do not worry about resubmissions, feel free to resubmit as needed prior to the deadline (if you are using late days to do a resubmission, please notify the course staff). Remember, the visualization itself should not give away which design is earnest and which is deceptive; the file names will be randomized by the course staff prior to peer review. ",
    "url": "/projects/project2/#submission-details",
    "relUrl": "/projects/project2/#submission-details"
  },"22": {
    "doc": "Project 2: Deceptive Visualization - Peer Grading",
    "title": "Project 2: Deceptive Visualization - Peer Grading",
    "content": "You will review two Project 2 submissions from your classmates and share constructive feedback. This assignment is an opportunity to both (a) develop skills to effectively evaluate and critically analyze visualization designs, and (b) help guide subsequent efforts by your peers to improve project quality and visualization design across the class. An important goal for this assignment is to understand how visualization designs might aim to intentionally (or unintentionally) mislead the viewer, so as to provide you with more confidence and skepticism when interpreting visualizations in the wild. ",
    "url": "/projects/project2peer/",
    "relUrl": "/projects/project2peer/"
  },"23": {
    "doc": "Project 2: Deceptive Visualization - Peer Grading",
    "title": "Assignment",
    "content": "For each peer review, begin by critically reading the visualizations and try to determine which is the earnest design and which is the deceptive design. Note what you discover and learn about the data set, and what properties lead you to a particular conclusion. You must identify which visualization you believe to be intentionally deceptive, along with a rationale indicating which design elements led you to this conclusion. Next, author constructive critiques for each visualization design. Consider the following concerns: . | Are expressive and effective visual encodings applied? | How well does the choice of encodings they reveal the most important features or trends of the underlying data? | Is critical data easily seen, or is it somehow hidden? | Is an audience likely to understand the visualization? | How clear and transparent is the design? | Are elements appropriately titled or labeled? | Is there appropriate spacing, layout, legible type, and other forms of design styling? | Is the overall display confusing or cluttered? | Is there important information missing that is needed to interpret the visualization approapriately? | . To share critique, we will use the “I like / I wish / What if?” format. This involves sharing positive feedback on effective aspects, critical (but respectful!) feedback on what might be improved, and more wild (even half-baked) ideas your fellow students could explore in subsequent design iterations or future work. For each visualization, you must provide at least two statements in each of the I like / I wish / What if? categories. ",
    "url": "/projects/project2peer/#assignment",
    "relUrl": "/projects/project2peer/#assignment"
  },"24": {
    "doc": "Project 2: Deceptive Visualization - Peer Grading",
    "title": "Submission Details",
    "content": "This is an individual assignment. You may not work in groups. Your peer reviews are due Fri 05/03, 11:59pm. The links to the submissions that you are required to evaluate will be emailed to you. You must submit peer reviews for two Project 2 submissions. To submit your review, you must use gradescope. Please carefully respond to each of the questions raised. ",
    "url": "/projects/project2peer/#submission-details",
    "relUrl": "/projects/project2peer/#submission-details"
  },"25": {
    "doc": "Project 3: Interactive Visualization",
    "title": "Project 3: Interactive Visualization",
    "content": "For this assignment, you will explore the issues involved in implementing interactive visualizations. You will build a visualization that enables interactive exploration of a dataset of your choosing (we do have some suggestions as well which you can find below) and deploy it on the web. One goal of this assignment is to gain familiarity with implementing interaction techniques for visualizations. For example, the zipdecode and NameGrapher applications apply the interactive technique of dynamic queries – as explored in the earlier HomeFinder application – to the problem of uncovering patterns in zip codes and baby names. Similarly, treemaps were originally developed to display hierarchical file structures and were later adapted to the problem of interactively depicting a map of the stock market. We have seen many other examples of interactive visualization techniques in class. The goal of this assignment is not only for you to gain hands-on implementation experience, but also for you to think about the effectiveness of the specific techniques for your chosen data domain. One challenge is to scope the assignment so that you can finish it within two weeks. Focus on designing a limited yet compelling visualization that enables interactive exploration along a few critical dimensions. The NameGrapher application is a nice example that uses a simple but elegant interaction design to enable engaging explorations. A tightly focused, well-implemented interactive graphic is much preferred to a sprawling design that attempts too much! . ",
    "url": "/projects/project3/",
    "relUrl": "/projects/project3/"
  },"26": {
    "doc": "Project 3: Interactive Visualization",
    "title": "Team Registration",
    "content": "For this assignment, you should work in teams of 2-3 students. You might want to find project partners that you will continue to work with for the final project. As soon as you have formed a team and chosen a dataset, submit the team registration form. Your form must include the names, UCSD email addresses, and PIDs of each team member, along with a concise title for your interactive visualization. The visualization title need not be exact, just a rough title should be a good start. If you are looking for project partners, please post to Ed to find classmates with similar interests! You should submit your team registration by Mon 02/05, 11:55 pm. You will submit your interactive prototype as a webpage hosted on GitHub Pages. ",
    "url": "/projects/project3/#team-registration",
    "relUrl": "/projects/project3/#team-registration"
  },"27": {
    "doc": "Project 3: Interactive Visualization",
    "title": "Deliverables",
    "content": "Design an interactive graphic aimed at enabling understanding of a compelling question for a dataset of your choosing or you may choose any of the suggested datasets. To determine what subset of the data and which interactive options are most promising, you may want to perform additional exploratory analysis. What aspects of the data reveal the most interesting discoveries or stories? Do not feel obligated to try to convey everything about the data: focus on a compelling subset. Your graphic must include interactions that enable exploration. Possible techniques include panning, zooming, brushing, details-on-demand (e.g., tooltips), dynamic query filters, and selecting different measures to display. You are free to also consider highlights, annotations, or other narrative features intended to draw attention to particular items of interest and provide additional context. Implement your interactive graphic and deploy it to the web. You may only use only D3.js for this project. Vega-lite/Plotly/Altair/any other high-level plotting library or tool are strictly not allowed for this project. You can use other non-plotting related JavaScript libraries, e.g. Lodash, Svelte, Moment, etc. Your graphic should not require customized server-side support; you should simply load data from a static data file or public web API. Please refer to the Tech Support page for instructions on deploying a GitHub Pages website using Svelte. For deploying websites with other libraries, feel free to explore on your own. Using our template to complete this project is not mandatory. You will use GitHub pages to host your visualization from your project repository. Make sure that you make your repository “Public”. We recommend keeping everything (development files and website) in your master branch: either serve your website from the root folder or the “/docs” folder. Your repo must also contain the (unobfuscated) source code for your visualization. Your deployed web page should also include a write-up with the following components: . | A rationale for your design decisions. How did you choose your particular visual encodings and interaction techniques? What alternatives did you consider and how did you arrive at your ultimate choices? . | An overview of your development process. Describe how the work was split among the team members. Include a commentary on the development process, including answers to the following questions: Roughly how much time did you spend developing your application (in people-hours)? What aspects took the most time? . | . You can either include your write-up on the same page as your visualization or link to a separate file. ",
    "url": "/projects/project3/#deliverables",
    "relUrl": "/projects/project3/#deliverables"
  },"28": {
    "doc": "Project 3: Interactive Visualization",
    "title": "Grading Criteria",
    "content": "Projects that squarely meet the requirements for the assignment will receive a score of 9/10. Going beyond the call of duty can net additional points, for example: . | Advanced interaction techniques | Novel visualization elements | Effective multi-view coordination | Thoughtful and elegant graphic design | Insightful &amp; engaging exploration experience | . Point deductions will be made when projects suffer from: . | Errors or broken features | Ineffective visual encodings | Confusing interface design or unhelpful interactions | Lack of exploratory interaction techniques | Incomplete or insufficient write-up | . ",
    "url": "/projects/project3/#grading-criteria",
    "relUrl": "/projects/project3/#grading-criteria"
  },"29": {
    "doc": "Project 3: Interactive Visualization",
    "title": "Submission Details",
    "content": "Submit your team registration form by Mon 04/29, 11:55 PM. You must have a working prototype online by Fri 05/10, 11:59 pm. Your prototype should be accessible on GitHub pages using a publicly viewable URL. In addition, you must submit the URL on Gradescope. One submission per team is sufficient. Submissions will be reviewed as part of a subsequent peer review assignment (due Fri 05/17), so try to avoid a late submission; assignments submitted late may not be included as part of the peer review and thus not receive peer feedback. ",
    "url": "/projects/project3/#submission-details",
    "relUrl": "/projects/project3/#submission-details"
  },"30": {
    "doc": "Project 3: Interactive Visualization",
    "title": "Rubric",
    "content": "The assignment is out of 10 points possible. Submissions that squarely meet the project requirements (Satisfactory column) will get 9/10 points. | Component | Excellent | Satisfactory | Not Satisfactory | . | Visual Encodings | The visualization does not violate the expressiveness criteria and the design choices (marks and encoding channels) are clear, evocative, and effective. (+3 points) | The visualization does not violate the expressiveness criteria, but another set of design choices (marks and encoding channels) could have been more effective (e.g. using the area visual channel instead of position when possible). (+2.5 points) | The visualization violates the expressiveness criteria (e.g. heavy overplotting, encodings that imply incorrect readings, etc.), and these violations are not addressed using the available interactions (e.g. overplotting that cannot be filtered or zoomed into). (+1.5 points) | . | Data Transformations |   | The visualization uses appropriate data transformations (e.g. filtering, aggregating) and clearly describes the transformations to the reader (e.g. in the subtitle of the plot). (+1.5 points) | The visualization used an inappropriate set of data transformations (e.g. filtering out important outliers), or did not clearly describe these transformations to the reader. (+1 point) | . | Interaction | The interactive elements of the plot are polished, mostly bug-free, and enable the reader to discover interesting patterns in the data. (+3.5 points) | The interactive elements of the plot are functional and enable the reader to discover interesting patterns in the data, but a static plot (perhaps with a different encoding) could have conveyed the same information just as effectively. (+3 points) | The plot would have been substantially more effective as a static plot without the interaction; or, the interaction has major bugs that preclude use. (+2 point) | . | Writeup |   | The writeup clearly describes the motivation for the visualization and the rationale for its design decisions (e.g. the visual encodings, data transformations, color palette, etc.). It also contains an overview of the team’s development process. (+2 points) | One or more required elements of the writeup has major issues (e.g. rationale misses important parts of the visualization design) or is missing. (+1 points) | . | Creativity and Originality | The submission exceeds the assignment requirements, with original insights or particularly engaging visualizations. (+1 bonus point) | The submission meets the assignment requirements. (+0 points) |   | . ",
    "url": "/projects/project3/#rubric",
    "relUrl": "/projects/project3/#rubric"
  },"31": {
    "doc": "Project 3: Interactive Visualization",
    "title": "Suggested Data Sources",
    "content": "To help get you started, this assignment, we’ve provided three possible datasets for you to use, although you’re welcome to select any dataset you prefer. Note that these datasets are the same as the ones from Project 2. Feel free to reuse the dataset you used in Project 2 to speed up your development process. Data on Energy by Our World in Data, 1900-2022 . Our World in Data, a non-profit that gathers and analyzes data about global issues, has published data about energy usage for countries (e.g. coal consumption, hydropower consumption, etc.) around the world since 1900. You can download the data here. Education Data . Every year, the federal government releases large amounts of data on US schools, districts, and colleges. However, this information is scattered across multiple datasets. Urban Institute’s Education Data Explorer tries to fix this issue by putting together data from various sources such as the National Center for Education Statistics’ Common Core of Data (CCD), the Civil Rights Data Collection (CRDC), the US Department of Education’s EDFacts, and IPUMS’ National Historical Geographic Information System (NHGIS) and makes it available as an API. You can download the data by making an API call using the code available on the website or alternatively clicking on the downloads button on the website. Internet Usage Data . UNdata brings international statistical databases within easy reach of users through a single-entry point. It is maintained by the Development Data Section of the Development Data and Outreach Branch within the Statistics Division of the Department of Economic and Social Affairs (UN DESA) of the UN Secretariat. You can find the internet usage data here. Feel free to take a look at some of the other datasets made available by UNdata here. This data has the following columns: . | Region/country Code: code representing the country or region. | Region or Country Name: Field containing the country name. | Year: Field containing the year at which the data was collected. | Value: Field denoting the Percentage of individuals using the internet. | Source: Field denoting the source of the data. | . Here are some other possible sources to consider. You are also free to use data from a source different from those included here. If you have any questions on whether a dataset is appropriate, please ask the course staff ASAP! . | City of San Diego open data | U.S. Government Open Datasets | U.S. Census Bureau - Census Datasets | IPUMS.org - Integrated Census &amp; Survey Data from around the World | Federal Elections Commission - Campaign Finance &amp; Expenditures | Federal Aviation Administration - FAA Data &amp; Research | NOAA Daily Weather - NOAA Daily Global Historical Climatology Network Data | yelp.com/dataset - Yelp Open Dataset | fivethirtyeight.com - Data and Code behind the Stories and Interactives | Buzzfeed News - Open-source data from BuzzFeed’s newsroom | . ",
    "url": "/projects/project3/#suggested-data-sources",
    "relUrl": "/projects/project3/#suggested-data-sources"
  },"32": {
    "doc": "Project 3: Interactive Visualization - Peer Grading",
    "title": "Project 3: Interactive Visualization - Peer Grading",
    "content": "You will review two Project 3 submissions from your classmates and share constructive feedback. This assignment is an opportunity to both (a) develop skills to effectively evaluate and critically analyze visualization designs, and (b) help guide subsequent efforts by your peers to improve project quality and visualization design across the class. ",
    "url": "/projects/project3peer/",
    "relUrl": "/projects/project3peer/"
  },"33": {
    "doc": "Project 3: Interactive Visualization - Peer Grading",
    "title": "Assignment",
    "content": "For each peer review, begin by engaging with the prototype. Interact with the visualization and try to exhaustively cover the views and interactions that the prototype supports. Note what you discover and learn about the data set as you do so. Be sure to also read the write-ups to gain more insight into the process and design decisions behind the prototype. Next, author a constructive critique of the visualization covering at least the following concerns: . | Visual Encodings. Are expressive and effective visual encodings applied? How well do they reveal the most important features or trends of the underlying data? Is critical data easily seen, or is it unnecessarily “hidden” and only revealed in response to interaction? Is the target audience likely to understand the visualization? | Interaction Techniques. Do the supported interaction techniques enable more effective discovery of interesting trends, patterns or outliers? Do they engage the viewer in a process of meaningful exploration or learning? Are the interactions well-implemented, without notable performance issues or usability problems? | Design Quality. Assess the overall design quality in terms of organization and presentation. Are elements appropriately titled or labeled? Is there appropriate spacing, layout, legible type, and other forms of design styling? Is it clear where to begin viewing/interacting with the design? Is the overall display confusing or cluttered? How successful is the prototype in meeting the intended goals? | . For each of the concerns listed above – visual encodings, interaction techniques, and overall design quality – we recommend using the “I like / I wish / What if?” format. Be sure to share positive feedback on effective aspects, critical (but respectful!) feedback on what might be improved, and more wild (even half-baked) ideas a team might explore in subsequent design iterations. Each peer review should contain at least a dozen such comments (average of 4 comments for each section (I Like/I wish/What if?)), often much more! . ",
    "url": "/projects/project3peer/#assignment",
    "relUrl": "/projects/project3peer/#assignment"
  },"34": {
    "doc": "Project 3: Interactive Visualization - Peer Grading",
    "title": "Submission Details",
    "content": "This is an individual assignment. You may not work in groups. Your peer reviews are due Tue 05/21, 11:59pm. The links to the submissions that you are required to evaluate will be emailed to you. You must submit peer reviews for two Project 3 submissions. To submit your review, you must use gradescope. Please carefully respond to each of the questions raised. ",
    "url": "/projects/project3peer/#submission-details",
    "relUrl": "/projects/project3peer/#submission-details"
  },"35": {
    "doc": "📚 Resources",
    "title": "📚 Resources",
    "content": " ",
    "url": "/resources/#-resources",
    "relUrl": "/resources/#-resources"
  },"36": {
    "doc": "📚 Resources",
    "title": "Table of contents",
    "content": ". | Altair | Learning D3 | Storytelling Websites | Visualization Principles | Visualization Design Ideas | Color Palettes | . ",
    "url": "/resources/#table-of-contents",
    "relUrl": "/resources/#table-of-contents"
  },"37": {
    "doc": "📚 Resources",
    "title": "Altair",
    "content": ". | Altair Visualization Curriculum | Vega-Altair User Guide | . ",
    "url": "/resources/#altair",
    "relUrl": "/resources/#altair"
  },"38": {
    "doc": "📚 Resources",
    "title": "Learning D3",
    "content": ". | D3 Gallery | D3 in Depth | Intro to D3.js | Interactive Charts with D3 | https://wattenberger.com (Contain useful blog posts by a front-end developer, especially on learning about D3.js) | https://observablehq.com/@wattenberger/prototyping-in-d3 (D3 Prototyping) | https://vallandingham.me/vis/ (other cool blog) | . ",
    "url": "/resources/#learning-d3",
    "relUrl": "/resources/#learning-d3"
  },"39": {
    "doc": "📚 Resources",
    "title": "Storytelling Websites",
    "content": ". | https://pudding.cool . | https://github.com/the-pudding (Cool storytelling website, they provide open-source code, too) . | . -——————————————————————————————————- . | https://distill.pub . | https://github.com/distillpub (Interactive Machine Learning) . | . -——————————————————————————————————- . | https://mlu-explain.github.io/ | https://github.com/aws-samples/aws-mlu-explain Visual explanations of core machine learning concepts | . -——————————————————————————————————- . | https://seeing-theory.brown.edu/#firstPage | https://github.com/seeingtheory/Seeing-Theory (Cool Interactive Visualization on learning probability and statistics) | . -——————————————————————————————————- . | https://d3gt.com/unit.html | https://github.com/mrpandey/d3graphTheory (Visualizing Graph Theory Concepts) | . ",
    "url": "/resources/#storytelling-websites",
    "relUrl": "/resources/#storytelling-websites"
  },"40": {
    "doc": "📚 Resources",
    "title": "Visualization Principles",
    "content": ". | The Visual Display of Quantitative Information by Edward Tufte | Fundamentals of Data Visualization by Claus Wilke | . ",
    "url": "/resources/#visualization-principles",
    "relUrl": "/resources/#visualization-principles"
  },"41": {
    "doc": "📚 Resources",
    "title": "Visualization Design Ideas",
    "content": ". | https://www.awwwards.com (HIGHLY RECOMMEND for design inspirations!) | https://datavizproject.com (1 dataset, 100 visualizations) | https://www.data-to-viz.com (taxonomy of visualizations) | https://www.economist.com/graphic-detail?page=1 (Data Viz examples by The Economist) | https://informationisbeautiful.net (cool data viz designs) | . ",
    "url": "/resources/#visualization-design-ideas",
    "relUrl": "/resources/#visualization-design-ideas"
  },"42": {
    "doc": "📚 Resources",
    "title": "Color Palettes",
    "content": ". | https://color.adobe.com/create/color-wheel (Adobe color palettes) | http://zhongguose.com/#danqianhong (Chinese Traditional Colors) | http://nipponcolors.com (Japanese Traditional Colors) | https://picular.co. (Find the color of anything you want) | https://webgradients.com (Different kind of linear gradients) | https://www.happyhues.co/palettes/17 (Different color palette preview on same web design) | . ",
    "url": "/resources/#color-palettes",
    "relUrl": "/resources/#color-palettes"
  },"43": {
    "doc": "📚 Resources",
    "title": "📚 Resources",
    "content": " ",
    "url": "/resources/",
    "relUrl": "/resources/"
  },"44": {
    "doc": "👩‍🏫 Staff",
    "title": "👩‍🏫 Staff",
    "content": " ",
    "url": "/staff/",
    "relUrl": "/staff/"
  },"45": {
    "doc": "👩‍🏫 Staff",
    "title": "Instructor",
    "content": "Jared Wilber he/him . jwilber@ucsd.edu Lecture: TuTh 6:30-7:50PM, SOLIS 104 . Jared Wilber is a Senior Software Engineer at Nvidia and lecturer at UC San Diego. He previously started a company (via YCombinator) and worked as a Data Scientist for Amazon Web Services. His data visualization work includes open source projects (he is the author of roughViz.js and MLU-Explain) and narrative journalism (e.g. The Pudding). He is from San Diego. ",
    "url": "/staff/#instructor",
    "relUrl": "/staff/#instructor"
  },"46": {
    "doc": "👩‍🏫 Staff",
    "title": "Staff",
    "content": "TA Amirhossein Panahi he/him . apanahi@ucsd.edu . Hey everyone! I’m Amirhossein Panahi (you can call me Amir), a second-year PhD student in Data Science at UCSD. I’m passionate about leveraging data to solve real-world problems, particularly interested in machine learning applications in healthcare. In my free time, I love swimming and hiking, exploring new trails, and enjoying the beautiful outdoors. Looking forward to working and collaborating with all of you! . TA Giorgia Nicolaou she/her . gnicolaou@ucsd.edu . Hi everyone! I’m Giorgia, a second year graduate student in HDSI. I’m originally from San Diego and loved it so much I had to come back for grad school! Outside of academics I spend most of my time cooking, hanging out with friends, and practicing yoga. I look forward to meeting and working with everyone in DSC 106! . TA Bruce good/boy . Bruce is a ~2.5 year old (in human years) pug. He was rescued from The San Diego Pug Rescue when he was just a few months old. At work, he loves being pet and laying down. Outside of work, he loves eating food, cuddling with his mom, sleeping, and running around non-stop. He is extremely friendly and loving. ",
    "url": "/staff/#staff",
    "relUrl": "/staff/#staff"
  },"47": {
    "doc": "📖 Syllabus",
    "title": "📖 Syllabus",
    "content": " ",
    "url": "/syllabus/#-syllabus",
    "relUrl": "/syllabus/#-syllabus"
  },"48": {
    "doc": "📖 Syllabus",
    "title": "Table of contents",
    "content": ". | About 🧐 | Getting Started 💻 . | Websites | Development Environment | . | Communication 💬 | Course Components 🍎 . | Lectures | Participation | Discussions | Labs | Projects | Office Hours | Weekly Schedule | . | Policies 💯 . | Grading | Extra Credit | Late Policy, Slip Days, and Drops | Regrade Requests | Incompletes | A note on letter grades | . | Collaboration Policy and Academic Integrity 🤝 . | Why is academic integrity important? | What counts as cheating? | How can I be sure that my actions are NOT considered cheating? | . | Support 🫂 . | Accommodations | Diversity and Inclusion | Campus Resources | . | Acknowledgements 🙏 | . ",
    "url": "/syllabus/#table-of-contents",
    "relUrl": "/syllabus/#table-of-contents"
  },"49": {
    "doc": "📖 Syllabus",
    "title": "About 🧐",
    "content": "Data visualization is one of our most powerful cognitive tools to make sense of large amounts of data. Well-designed visualizations enable us to use visual processing rather than calculation, allowing to “see” patterns in data. DSC 106 is a project-centered course that covers fundamental principles and techniques in data visualization. By the end of the course, you will: . | Understand and apply key visualization techniques and theory. | Design, evaluate, and critique visualization designs. | Implement interactive data visualizations for the web using D3.js. | Develop a substantial visualization project. | . Prerequisites: DSC 80. ",
    "url": "/syllabus/#about-",
    "relUrl": "/syllabus/#about-"
  },"50": {
    "doc": "📖 Syllabus",
    "title": "Getting Started 💻",
    "content": "The course website, dsc106.com, will contain links to all course content. There are also a few things you’ll need to do to get set up. Websites . You’ll need to make accounts or join the class on the following sites. | Ed: We’ll be using Ed as our course message and discussion board. More details are in the Communication section below. ⚠️It will take me a week or two to get access to my .ucsd email. Thus, we won’t sign up for Ed until then, so hang tight. If you have any questions in the meantime, email me at jaredwilber5@gmail.com⚠️ . | GitHub: Like in DSC 30 and 80, you’ll access all course content (lecture slides and assignments) by pulling our course GitHub repository. That repo is here: https://github.com/dsc-courses/dsc106-sp24. In most assignments, you won’t need to push anything to GitHub. | Zoom (optional): To access remote office hours, if you’d like. | . Note that we will not be using Canvas for anything this quarter. Development Environment . As soon as you are able to, go follow the steps in the Tech Support page of the course website to set up your development environment for the course. ",
    "url": "/syllabus/#getting-started-",
    "relUrl": "/syllabus/#getting-started-"
  },"51": {
    "doc": "📖 Syllabus",
    "title": "Communication 💬",
    "content": "This quarter, we’ll be using Ed as our course message board. You will be added to Ed automatically; use the invite link in the section above if you weren’t added. If you have a question about anything to do with the course — if you’re stuck on a problem, didn’t understand something from lecture, want clarification on course logistics, or just have a general question about data science — you can make a post on Ed. We only ask that if your question includes some or all of an answer (even if you’re not sure it’s right), please make your post private so that others cannot see it. You can also post anonymously to other students if you prefer. Course staff will regularly check Ed and try to answer any questions that you have. You’re also encouraged to answer questions asked by other students. Explaining something is a great way to solidify your understanding of it! . Please don’t email individual staff members, just make a private or public Ed post instead. ",
    "url": "/syllabus/#communication-",
    "relUrl": "/syllabus/#communication-"
  },"52": {
    "doc": "📖 Syllabus",
    "title": "Course Components 🍎",
    "content": "Lectures . Lectures will be held in-person on Tuesday and Thursday from 6:30-7:50PM in [SOLIS 104]. Lecture attendance is not strictly required, but is one option for earning your participation grade (detailed below). Lectures will be podcasted, and lecture slides will be posted before class. Participation . Given the relatively late lecture time, lecture attendance will not be mandatory. Discussions . We will not be using the scheduled discussion sections for this course. We encourage you to attend office hours instead. Labs . There will be 7 lab assignments due weekly throughout the quarter. Each lab assignment is designed to be a walkthrough of practical material that you will use for your projects. Labs are meant to serve as worked examples: the solution code will be given to you as part of the lab. To receive credit for labs, you will need to complete the lab and then get checked off during office hours by a TA. The check off requirements will be clearly described at the end of each lab assignment. Each lab is worth 2% of your final grade, and the lowest lab grade will be dropped. Labs will be released on Fridays and due on the following Fridays at 11:59PM. You will access labs by pulling the course GitHub repository. Projects . There will be 4 projects due throughout the quarter. The projects are open-ended and are the primary focus of the course. As such, our standards for grading will be similar to the way portfolio pieces are evaluated for internship/research lab/job applications — we expect your best work! The first three projects are solo projects. For the final project, you may work in pairs. Working in Pairs . You may work together on the final project (and only the final project!) with a partner. If you work with a partner, you are both required to actively contribute to all parts of the project. You must both be working on the assignment at the same time together, either physically or virtually on a Zoom call. You are encouraged to follow the pair programming model, in which you work on just a single computer and alternate who writes the code and who thinks about the problems at a high level. In particular, you cannot split up the project and each work on separate parts independently. If you work with a partner: . | Only one partner needs to submit the project on Gradescope; this partner should add the other partner to their submission. | You and your partner will receive the same score on any submissions you make together. | . If you are unhappy with your partnership (e.g., if your partner does not keep in touch, does not come prepared to work on the assignment, or does not seem to be engaged in the process), please first address your concerns to your partner, and try to agree on what should be done to make the partnership work well for both of you. If that approach is not successful, explain the issues to the instructors, who will work with you and your partner to improve the situation. Note that you may not work with partners on lab assignments, however you’re encouraged to discuss all assignments with others at a conceptual level in office hours and study groups. Office Hours . To get help on assignments and concepts, course staff will be hosting several office hours per week. The majority of our office hours are held in-person, though a few are held remotely – if you’re able to, you’re strongly encouraged to attend in-person. See the Calendar tab of the course website for the most up-to-date schedule and instructions. Weekly Schedule . To summarize all of the events and deadlines, refer to this general weekly schedule (which is subject to change in any given week): . | Sunday | Monday | Tuesday | Wednesday | Thursday | Friday | Saturday | . |   |   | Lecture |   | Lecture |   |   | . |   |   |   |   |   | Lab and Project due |   | . ",
    "url": "/syllabus/#course-components-",
    "relUrl": "/syllabus/#course-components-"
  },"53": {
    "doc": "📖 Syllabus",
    "title": "Policies 💯",
    "content": "Grading . Here is how we’ll compute your grade: . | Component | Weight | Notes | . | Participation | 0% | Attendance is not mandatory. | . | Labs | 18% | 3% per lab, 1 lowest lab dropped | . | Project 1 | 12% |   | . | Project 2 | 15% | 10% for submission, 5% for peer review | . | Project 3 | 15% | 10% for submission, 5% for peer review | . | Final Project | 40% | 3% for proposal, 7% prototype, 15% video, 15% final submission | . Extra Credit . Each week, an extra credit opportunity worth 1% will be available. To earn this extra credit, you must email me a data visualization you saw during the previous week (it may be from a website, a newspaper, a photo of something you saw, whatever), along with an explanation of what you found interesting and effective about that particular visualization. I will select for the most interesting piece of visualization each week and share it during the Tuesday lecture. The student who sent the selected visualization will receive 1% extra credit. To be considered for each week’s extra credit, email me a visualization and explanation before that week’s Sunday at 11:59pm. Late Policy, Slip Days, and Drops . All assignments must be submitted by 11:59PM San Diego time on the due date to be considered on time. You may turn them in as many times as you like before the deadline, and only the most recent submission will be graded, so it’s a good habit to submit early and often. If you make a submission after the deadline, your assignment will be counted as late. You have 6 “slip days” to use throughout the quarter. A slip day extends the deadline of an assignment by 24 hours. The number of slip days you can use on an assignment depends on the kind of assignment: . | On labs, you may use up to 1 slip day. Since labs are due on Fridays and submitted via email, you may get checked off on the following Monday after a lab deadline to use 1 slip day. | On projects, you may use up to 2 slip days. Projects will not be accepted more than 48 hours after the deadline. Note that you will not be able to use slip days on the Final Project Deliverables due on Saturday, June 8, 2024. | . Slip days are designed to be a transparent and predictable source of leniency in deadlines. You can use a slip day if you are too busy to complete an assignment on its original due date (or if you forgot about it). But slip days are also meant for things like the internet going down at 11:58 PM just as you go to submit your assignment. Slip days are meant to be used in exceptional circumstances, so you probably should not need to use all 6, but if you have something going on in your life that is impeding your ability to do your classwork on time, please reach out to us as soon as possible so we can work something out. Slip days are applied automatically at the end of the quarter, and you don’t need to ask in order to use one. It’s your responsibility to keep track of how many you have left. If you’ve run out of slip days and submit an assignment late, that assignment may still be graded, but you will receive a 0 on it when we calculate grades at the end of the quarter. However, in the event that you use all 6 days and submit another assignment late, we will allocate your slip days first to your projects (in chronological order), then to your labs (in chronological order), and then to other assignments. This is done to prevent you from receiving a 0 on, say, Project 4, if you’ve used all of your slip days on labs up until that point; in such a case, you’d instead receive a 0 on an earlier lab that isn’t weighted as much in your grade. Regrade Requests . If you feel that there in an error in grading, you may submit a regrade request within two days of the grades being released. If you do not submit a regrade request within two days, your original grade will be final. To submit a regrade request for a manually graded problem, make the regrade request directly on Gradescope. Note that part of your grade is clarity, so if your answer was mostly right but unclear you may still not be eligible for full credit. Incompletes . In the unfortunate circumstance that you become sick, suffer a loss, or otherwise experience a significant setback that is outside of your control, you may be eligible for an Incomplete grade, which allows you to complete the rest of the work at a later time. If you are experiencing challenges due to circumstances outside your control, please contact me ASAP and we can discuss the best course of action. Note that an Incomplete does not allow you to re-do work that has already been completed, only to do work that hasn’t been completed, so it’s best to reach out right away. A note on letter grades . The following is adapted from CSE 160 at the University of Washington. Grading for this class is not curved in the sense that the average is set at (say) a B+ and half of the class must receive a grade lower than that. If everyone does well and shows mastery of the material, everyone can receive an A (this would be awesome!). If no one does well (this is unlikely), then everyone can receive a C. Grading for this class is curved in the sense that we do not have a pre-defined mapping from project and exam scores to a final GPA. There is no pre-determined score (e.g., 90% of all possible points) that earns an A or a B or a C or any other grade. To determine the final grade, we will ask questions like “Did this student master the material?”. With that said, grades will not be any stricter than the standard grading scale (where an A+ is a 97+, A is 93+, A- is 90+, etc). For instance, the threshold for an “A” will never be higher than 93%. Try your best not to worry about grades, and we’ll reciprocate by being fair. We’re in this together 😎. ",
    "url": "/syllabus/#policies-",
    "relUrl": "/syllabus/#policies-"
  },"54": {
    "doc": "📖 Syllabus",
    "title": "Collaboration Policy and Academic Integrity 🤝",
    "content": "DSC 106 is known for being a rigorous but rewarding course. While you will be challenged this quarter, we will be offering you plenty of support through office hours and Ed. Make good use of these resources, and you will be able to succeed in this course. There is no excuse for cheating in this course. If you do cheat, we will enforce the UCSD Policy on Integrity of Scholarship. This means you will likely fail the course and the Dean of your college will put you on probation or suspend or dismiss you from UCSD. Students agree that by taking this course, their assignments may be submitted to third-party software to help detect plagiarism. Why is academic integrity important? . Academic integrity is an issue that is pertinent to all students on campus. When students act unethically by copying someone’s work, taking an exam for someone else, plagiarizing, etc., these students are misrepresenting their academic abilities. This makes it impossible for instructors to give grades (and for the University to give degrees) that reflect student knowledge. This devalues the worth of a UCSD degree for all students, making it imperative for the the campus as a whole to enforce that all members of this community are honest and ethical. We want your degree to be meaningful and we want you to be proud to call yourself a graduate of UCSD! . The UCSD Policy on Integrity of Scholarship and this syllabus list some of the standards by which you are expected to complete your academic work, but your good ethical judgment (or asking us for advice) is also expected as we cannot list every behavior that is unethical or not in the spirit of academic integrity. Ignorance of the rules will not excuse you from any violations. What counts as cheating? . In DSC 106, you can read books, surf the web, get inspiration from previous work or AI tools like ChatGPT, talk to your friends and the DSC 106 staff to get help understanding the concepts you need to know to complete your assignments. However, all code must be written by you (or, in the instance of projects, together with your partner). The following activities are considered cheating and are not allowed (not an exhaustive list): . | Using or submitting code acquired from other students (except from your pair programming partner during projects), the web, or any other resource not officially sanctioned by this course | Posting your code online, including on Ed, unless privately to instructors only | Having any other person complete any part of your assignment on your behalf | Completing an assignment on behalf of someone else | Providing code to any other student in the course | Splitting up project questions with your pair programming partner and each working on different questions | . The following activities are examples of appropriate collaboration and are allowed in (not an exhaustive list): . | (new) Using AI code generation tools, such as GitHub Copilot and ChatGPT, to help write your code | Discussing the general approach to solving labs or projects | Talking about problem-solving strategies or issues you ran into and how you solved them | Discussing the answers to exams with other students who have already taken the exam after the exam is complete | Using code provided in class, by the textbook or any other assigned reading or video, with attribution | Using Google to search for documentation. | Working together with other students on assignments without copying or sharing answers | Posting a question about your approach to a problem on Ed, without sharing your code | . How can I be sure that my actions are NOT considered cheating? . The best way to avoid problems is by using your best judgement and remembering to act with Honesty, Trust, Fairness, Respect, Responsibility, and Courage. Here are some suggestions for completing your work: . | Don’t look at or discuss the details of another student’s code for an assignment you are working on, and don’t let another student look at your code. | Don’t start with someone else’s code and make changes to it, or in any way share code with other students. | If you are talking to another student about an assignment, don’t take notes, and wait an hour afterward before you write any code. | . ",
    "url": "/syllabus/#collaboration-policy-and-academic-integrity-",
    "relUrl": "/syllabus/#collaboration-policy-and-academic-integrity-"
  },"55": {
    "doc": "📖 Syllabus",
    "title": "Support 🫂",
    "content": "Accommodations . From the Office for Students with Disabilities (OSD): . OSD works with students with documented disabilities to review documentation and determine reasonable accommodations. Disabilities can occur in these areas: psychological, psychiatric, learning, attention, chronic health, physical, vision, hearing, and acquired brain injuries, and may occur at any time during a student’s college career. We encourage you to contact the OSD as soon as you become aware of a condition that is disabling so that we can work with you. If you already have accommodations via OSD, please make sure that we receive your Authorization for Accommodation (AFA) letter by the end of Week 1 so that we can make arrangements for accommodations. Share your AFA letter with the instructor and the Data Science OSD Liaison, who can be reached at dscstudent@ucsd.edu. Diversity and Inclusion . We are committed to an inclusive learning environment that respects our diversity of perspectives, experiences, and identities. Our goal is to create a diverse and inclusive learning environment where all students feel comfortable and can thrive. If you have any suggestions as to how we could create a more inclusive setting, please let us know. We also expect that you, as a student in this course, will honor and respect your classmates, abiding by the UCSD Principles of Community. Please understand that others’ backgrounds, perspectives and experiences may be different than your own, and help us to build an environment where everyone is respected and feels comfortable. Campus Resources . If there is an issue you feel uncomfortable speaking with us or are searching for help on a specific concern, there are several campus resources available to you, including: . | UCSD Counseling and Psychological Services (CAPS) | Hub Basic Needs Center | Office for Students with Disability (OSD) | Office for Prevention of Sexual Harrassment and Discrimination | . ",
    "url": "/syllabus/#support-",
    "relUrl": "/syllabus/#support-"
  },"56": {
    "doc": "📖 Syllabus",
    "title": "Acknowledgements 🙏",
    "content": "This course is adopted from Sam Liu’s DSC 106, Winter 2024 course (e.g. this course last quarter). His acknowledgements: . Materials for this course have been adapted from classes taught by Soohyun Nam Liao and Jared Wilber at UCSD, Jeffrey Heer and Leilani Battle at UW, Arvind Satyanarayan at MIT, and Maneesh Agrawala and Michael Bernstein at Stanford University. The class draws heavily on materials and examples found online, and we try our best to give credit by linking to the original source. Please contact us if you find materials where credit is missing or that you would rather have removed. ",
    "url": "/syllabus/#acknowledgements-",
    "relUrl": "/syllabus/#acknowledgements-"
  },"57": {
    "doc": "📖 Syllabus",
    "title": "📖 Syllabus",
    "content": " ",
    "url": "/syllabus/",
    "relUrl": "/syllabus/"
  },"58": {
    "doc": "🙋‍♂️ Tech Support",
    "title": "🙋‍♂️ Tech Support",
    "content": "We recently updated this page to accommodate the necessity of deploying a gh-pages website from svelte. ",
    "url": "/tech_support/#%EF%B8%8F-tech-support",
    "relUrl": "/tech_support/#️-tech-support"
  },"59": {
    "doc": "🙋‍♂️ Tech Support",
    "title": "Table of contents",
    "content": ". | Introduction . | Git | VS Code | Prettier | Live Preview | Svelte for VS Code | . | Node.js and npm | Generate static site using svelte SSG . | Migrate from your project | . | Any question? | . ",
    "url": "/tech_support/#table-of-contents",
    "relUrl": "/tech_support/#table-of-contents"
  },"60": {
    "doc": "🙋‍♂️ Tech Support",
    "title": "Introduction",
    "content": "Labs and projects in DSC 106 are mostly coding assignments, so it’s important to make sure that your computing environment is set up properly. You will need to use DataHub for the first lab. You will need Git, VSCode, and Node to complete all other labs and projects. Git . All of our course materials, including your assignments, are hosted on GitHub in this Git repository. This means that you’ll need to download and use Git to work with the course materials. Git is a version control system. In short, it is used to keep track of the history of a project. With Git, you can go back in time to any previous version of your project, or even work on two different versions (or \"branches\") in parallel and \"merge\" them together at some point in the future. We'll stick to using the basic features of Git in DSC 106. There are Git GUIs, and you can use them for this class. You can also use the command-line version of Git. To get started, you'll need to \"clone\" the course repository. The command to do this is: . git clone https://github.com/dsc-courses/dsc106-sp24 . This will copy the repository to a directory on your computer. To bring in the latest version of the repository, run git pull in your local repository. This will not overwrite your work. In fact, Git is designed to make it very difficult to lose work (although it's still possible!). Merge Conflicts . You might face issues when using git pull regarding merge issues and branches. This is caused by files being updated on your side while we are also changing the Git repository by pushing new assignments on our side. Here are some steps you can follow to resolve it: . NOTE: Whenever working with GitHub pulls, merges, etc., it’s a good idea to save your important work locally so that if you accidentally overwrite your files you still have the work saved. Save your work locally before following the steps below. | git status shows the current state of your Git working directory and staging area. It’s a good sanity check to start with. You will probably see your project and lab files that you have worked on. | git add . will add all your files to be ready to commit. | git commit -m \"some message of your choice\" will commit the files, with some description in the quotations. This can be whatever you want, it won’t matter. | . At this stage, if you git pull, it should work. You should double-check that you have new files, as well as that your old files are unchanged. If they are changed then you should be able to just copy-paste from your local backup. If this does not work then you may have merge conflicts, follow the next steps: . | git checkout --theirs [FILENAME] will tell git that whenever a conflict occurs in [FILENAME] to keep your version. Run this for each file with a conflict. | git add [FILENAME] to mark each file with a conflict as resolved. | git rebase --continue or git merge, depending on the setup. | . VS Code . To create, write, and edit our code, we are going to use a code editor. For this class, we are going to provide support for VS Code. If you want to use another code editor, feel free to do so, but keep in mind that we may not be able to recreate the problems that you may run into. You may download VS Code from here. In order to make our lives easier when we develop websites, we are going to use some VS Code extensions. Up to lab 6, it is only necessary to install the following two extensions. Come back when you need to work on lab 6; more information (related to Node installation) will be updated. Prettier . This is an extension that will help us keep our code clean and tidy. Click “Install” on the webpage. It will redirect to your VSCode; then, click “Install” again to install the extension. Live Preview . This will host a local server in our workspace for us to preview our web pages on. Click “Install” on the webpage. It will redirect to your VSCode; then, click “Install” again to install the extension. Svelte for VS Code . Starting Lab4, you are going to use Svelte. This will help you with svelte components. Click “Install” on the webpage. It will redirect to your VSCode; then, click “Install” again to install the extension. ",
    "url": "/tech_support/#introduction",
    "relUrl": "/tech_support/#introduction"
  },"61": {
    "doc": "🙋‍♂️ Tech Support",
    "title": "Node.js and npm",
    "content": "Again, for Lab 4, we are going to need node.js and npm. Node.js is an open-source, cross-platform, JavaScript runtime environment that executes JavaScript code outside of a web browser. NPM – or “Node Package Manager” – is the default package manager for JavaScript’s runtime Node.js. You may find detailed instructions to download and install them here. To check the Node version, open a command prompt and type: . node --version . To check the npm version, type in: . npm --version . If everything is installed correctly, you should see the version number information. ",
    "url": "/tech_support/#nodejs-and-npm",
    "relUrl": "/tech_support/#nodejs-and-npm"
  },"62": {
    "doc": "🙋‍♂️ Tech Support",
    "title": "Generate static site using svelte SSG",
    "content": "To assist you in creating a static webpage for GitHub Pages using Svelte, we have developed a template for you: ShaokangJiang/svelte-template (github.com). Please follow the link provided, and initiate the creation of a new repository. After GitHub completes the cloning process, navigate to the settings page. On the left panel, under the “Pages” tab, locate the “Source” section and select “GitHub Actions” as the source. Clone this repository and proceed with your work. Upon completion, commit and push your changes. The corresponding GitHub Actions will then execute, building a static website hosted at https://your-username.github.io/your-repo-name for you. Migrate from your project . If you have started on the project and want to switch to using this template, you can copy your src folder, go to the local clone of your version of this template, then paste it. When it says the file exists, simply click replace, and you can continue working on your version of this template. ",
    "url": "/tech_support/#generate-static-site-using-svelte-ssg",
    "relUrl": "/tech_support/#generate-static-site-using-svelte-ssg"
  },"63": {
    "doc": "🙋‍♂️ Tech Support",
    "title": "Any question?",
    "content": "The easiest and fastest way to reach our support for technical matters is by posting on edstem. You may also go to OHs. ",
    "url": "/tech_support/#any-question",
    "relUrl": "/tech_support/#any-question"
  },"64": {
    "doc": "🙋‍♂️ Tech Support",
    "title": "🙋‍♂️ Tech Support",
    "content": " ",
    "url": "/tech_support/",
    "relUrl": "/tech_support/"
  }
}
